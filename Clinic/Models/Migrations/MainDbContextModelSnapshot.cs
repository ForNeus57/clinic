// <auto-generated />
using System;
using Clinic.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Clinic.Models.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Clinic.Models.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApartmentNumber")
                        .HasColumnType("integer")
                        .HasColumnName("apartment_number");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("city");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("street_name");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("integer")
                        .HasColumnName("street_number");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("zip_code");

                    b.HasKey("Id")
                        .HasName("pk_adresses");

                    b.ToTable("adresses", "main");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentNumber = 1,
                            City = "Kraków",
                            StreetName = "Kwiatowa",
                            StreetNumber = 1,
                            ZipCode = "11-001"
                        },
                        new
                        {
                            Id = 2,
                            City = "Warszawa",
                            StreetName = "Ogrodnicza",
                            StreetNumber = 333,
                            ZipCode = "22-021"
                        },
                        new
                        {
                            Id = 3,
                            City = "Wrocław",
                            StreetName = "Tulipanowa",
                            StreetNumber = 32,
                            ZipCode = "33-031"
                        },
                        new
                        {
                            Id = 4,
                            ApartmentNumber = 7,
                            City = "Poznań",
                            StreetName = "Nawozowa",
                            StreetNumber = 12,
                            ZipCode = "44-401"
                        },
                        new
                        {
                            Id = 5,
                            ApartmentNumber = 2,
                            City = "Gdańsk",
                            StreetName = "Sosnowa",
                            StreetNumber = 5,
                            ZipCode = "55-501"
                        },
                        new
                        {
                            Id = 6,
                            City = "Gdynia",
                            StreetName = "Brzozowa",
                            StreetNumber = 6,
                            ZipCode = "66-601"
                        },
                        new
                        {
                            Id = 7,
                            City = "Sopot",
                            StreetName = "Klonowa",
                            StreetNumber = 7,
                            ZipCode = "77-701"
                        },
                        new
                        {
                            Id = 8,
                            ApartmentNumber = 3,
                            City = "Szczecin",
                            StreetName = "Dębowa",
                            StreetNumber = 8,
                            ZipCode = "88-801"
                        },
                        new
                        {
                            Id = 9,
                            ApartmentNumber = 4,
                            City = "Bydgoszcz",
                            StreetName = "Świerkowa",
                            StreetNumber = 9,
                            ZipCode = "99-901"
                        },
                        new
                        {
                            Id = 10,
                            City = "Toruń",
                            StreetName = "Modrzewiowa",
                            StreetNumber = 10,
                            ZipCode = "10-101"
                        },
                        new
                        {
                            Id = 11,
                            City = "Olsztyn",
                            StreetName = "Topolowa",
                            StreetNumber = 11,
                            ZipCode = "11-111"
                        },
                        new
                        {
                            Id = 12,
                            ApartmentNumber = 5,
                            City = "Elbląg",
                            StreetName = "Wiśniowa",
                            StreetNumber = 12,
                            ZipCode = "12-121"
                        },
                        new
                        {
                            Id = 13,
                            ApartmentNumber = 6,
                            City = "Białystok",
                            StreetName = "Jabłoniowa",
                            StreetNumber = 13,
                            ZipCode = "13-131"
                        },
                        new
                        {
                            Id = 14,
                            City = "Lublin",
                            StreetName = "Gruszkowa",
                            StreetNumber = 14,
                            ZipCode = "14-141"
                        });
                });

            modelBuilder.Entity("Clinic.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer")
                        .HasColumnName("address_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pesel");

                    b.HasKey("Id")
                        .HasName("pk_patients");

                    b.HasIndex("AddressId")
                        .HasDatabaseName("ix_patients_address_id");

                    b.HasIndex("Pesel")
                        .IsUnique()
                        .HasDatabaseName("ix_patients_pesel");

                    b.ToTable("patients", "main");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            FirstName = "Dominik",
                            LastName = "Breksa",
                            Pesel = "92345678901"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            FirstName = "Ania",
                            LastName = "Nowak",
                            Pesel = "82345678902"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            FirstName = "Kamil",
                            LastName = "Kowal",
                            Pesel = "72345678903"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Pesel = "62345678904"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            FirstName = "Krzysztof",
                            LastName = "Krawczyk",
                            Pesel = "52345678905"
                        },
                        new
                        {
                            Id = 6,
                            AddressId = 6,
                            FirstName = "Ewa",
                            LastName = "Błaszczyk",
                            Pesel = "42345678906"
                        },
                        new
                        {
                            Id = 7,
                            AddressId = 7,
                            FirstName = "Tomasz",
                            LastName = "Karolak",
                            Pesel = "32345678907"
                        },
                        new
                        {
                            Id = 8,
                            AddressId = 8,
                            FirstName = "Anna",
                            LastName = "Dereszowska",
                            Pesel = "12345678908"
                        },
                        new
                        {
                            Id = 9,
                            AddressId = 9,
                            FirstName = "Piotr",
                            LastName = "Adamczyk",
                            Pesel = "12345678909"
                        },
                        new
                        {
                            Id = 10,
                            AddressId = 10,
                            FirstName = "Katarzyna",
                            LastName = "Figura",
                            Pesel = "12345678910"
                        },
                        new
                        {
                            Id = 11,
                            AddressId = 11,
                            FirstName = "Maciej",
                            LastName = "Stuhr",
                            Pesel = "12345678911"
                        },
                        new
                        {
                            Id = 12,
                            AddressId = 12,
                            FirstName = "Agnieszka",
                            LastName = "Dygant",
                            Pesel = "12345678912"
                        },
                        new
                        {
                            Id = 13,
                            AddressId = 13,
                            FirstName = "Robert",
                            LastName = "Więckiewicz",
                            Pesel = "12345678913"
                        },
                        new
                        {
                            Id = 14,
                            AddressId = 14,
                            FirstName = "Maja",
                            LastName = "Ostaszewska",
                            Pesel = "12345678914"
                        });
                });

            modelBuilder.Entity("Clinic.Models.Patient", b =>
                {
                    b.HasOne("Clinic.Models.Adress", "Address")
                        .WithMany("Patients")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_patients_adresses_address_id");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Clinic.Models.Adress", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
